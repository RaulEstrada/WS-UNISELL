
package impl.uniovi.unisell.bpel;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WS_InvocationService", targetNamespace = "http://ws.Invocation.tps", wsdlLocation = "http://156.35.98.14:8080/ode/deployment/bundles/UniSell.BPEL/WS_InvocationArtifacts.wsdl")
public class WSInvocationService
    extends Service
{

    private final static URL WSINVOCATIONSERVICE_WSDL_LOCATION;
    private final static WebServiceException WSINVOCATIONSERVICE_EXCEPTION;
    private final static QName WSINVOCATIONSERVICE_QNAME = new QName("http://ws.Invocation.tps", "WS_InvocationService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://156.35.98.14:8080/ode/deployment/bundles/UniSell.BPEL/WS_InvocationArtifacts.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WSINVOCATIONSERVICE_WSDL_LOCATION = url;
        WSINVOCATIONSERVICE_EXCEPTION = e;
    }

    public WSInvocationService() {
        super(__getWsdlLocation(), WSINVOCATIONSERVICE_QNAME);
    }

    public WSInvocationService(WebServiceFeature... features) {
        super(__getWsdlLocation(), WSINVOCATIONSERVICE_QNAME, features);
    }

    public WSInvocationService(URL wsdlLocation) {
        super(wsdlLocation, WSINVOCATIONSERVICE_QNAME);
    }

    public WSInvocationService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WSINVOCATIONSERVICE_QNAME, features);
    }

    public WSInvocationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSInvocationService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WSInvocation
     */
    @WebEndpoint(name = "WS_InvocationPort")
    public WSInvocation getWSInvocationPort() {
        return super.getPort(new QName("http://ws.Invocation.tps", "WS_InvocationPort"), WSInvocation.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSInvocation
     */
    @WebEndpoint(name = "WS_InvocationPort")
    public WSInvocation getWSInvocationPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.Invocation.tps", "WS_InvocationPort"), WSInvocation.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WSINVOCATIONSERVICE_EXCEPTION!= null) {
            throw WSINVOCATIONSERVICE_EXCEPTION;
        }
        return WSINVOCATIONSERVICE_WSDL_LOCATION;
    }

}
